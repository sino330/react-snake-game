{"version":3,"sources":["utils/index.js","constants/index.js","components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanal.jsx","hooks/useSnakeGame.js","App.js","reportWebVitals.js","index.js"],"names":["getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","fields","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","DirectionKeyCodeMap","37","38","39","40","OppositeDirection","Delta","Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","map","row","column","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","timer","unsubscribe","clearInterval","useSnakeGame","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","useEffect","setInterval","handleMoving","updateDirection","useCallback","newDirection","updateDifficulty","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","delta","newPosition","position","isCollision","isEatingMyself","newBody","removingTrack","pop","unshift","start","stop","reload","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.34c61f9c.chunk.js","sourcesContent":["export const getFoodPosition = (fieldSize, excludes) => {\n  while (true) {\n    const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n    const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n    const conflict = excludes.some((item) => item.x === x && item.y === y);\n\n    if (!conflict) {\n      return { x, y };\n    }\n  }\n};\n\nexport const initFields = (fieldSize, snake) => {\n  const fields = [];\n  for (let i = 0; i < fieldSize; i++) {\n    const cols = new Array(fieldSize).fill(\"\");\n    fields.push(cols);\n  }\n\n  fields[snake.y][snake.x] = \"snake\";\n\n  const food = getFoodPosition(fieldSize, [snake]);\n  fields[food.y][food.x] = \"food\";\n\n  return fields;\n};\n\nexport const isCollision = (fieldSize, position) => {\n  if (position.y < 0 || position.x < 0) {\n    // x, y のどちらかの座標がマイナスの値 の時\n    return true;\n  }\n  if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n    // x, y のどちらかの座標がフィールドサイズを超えてしまっている時\n    return true;\n  }\n\n  return false;\n};\n\nexport const isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === \"snake\";\n};\n","import { initFields } from \"../utils\";\n\nconst fieldSize = 35;\nexport const initialPosition = { x: 17, y: 17 };\nexport const initialValues = initFields(fieldSize, initialPosition);\nexport const defaultInterval = 100;\nexport const defaultDifficulty = 3;\n\nexport const Difficulty = [1000, 500, 100, 50, 10];\n\nexport const GameStatus = Object.freeze({\n  init: \"init\",\n  playing: \"playing\",\n  suspended: \"suspended\",\n  gameover: \"gameover\",\n});\n\nexport const Direction = Object.freeze({\n  up: \"up\",\n  right: \"right\",\n  left: \"left\",\n  down: \"down\",\n});\n\nexport const DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n});\n\nexport const OppositeDirection = Object.freeze({\n  up: \"down\",\n  right: \"left\",\n  left: \"right\",\n  down: \"up\",\n});\n\nexport const Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x: 1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 },\n});\n","import React from \"react\";\nimport { defaultDifficulty,Difficulty } from \"../constants\";\n\nconst Navigation = ({ length, difficulty = defaultDifficulty, onChangeDifficulty }) => {\n  const upVisibility = difficulty < Difficulty.length ? \"\" : \"is-hidden\";\n  const downVisibility = difficulty > 1 ? \"\" : \"is-hidden\";\n  const onUpDifficulty = () => onChangeDifficulty(difficulty + 1);\n  const onDownDifficulty = () => onChangeDifficulty(difficulty - 1);\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Length: </span>\n        <div className=\"navigation-item-number-container\">\n          <div className=\"num-board\">{length}</div>\n        </div>\n      </div>\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Difficulty: </span>\n        <div className=\"navigation-item-number-container\">\n          <span className=\"num-board\">{difficulty}</span>\n          <div className=\"difficulty-button-container\">\n            <div\n              className={`difficulty-button difficulty-up ${upVisibility}`}\n              onClick={onUpDifficulty}\n            ></div>\n            <div\n              className={`difficulty-button difficulty-down ${downVisibility}`}\n              onClick={onDownDifficulty}\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\n\nconst Field = ({ fields }) => {\n  return (\n    <div className=\"field\">\n      {fields.map((row) => {\n        return row.map((column) => {\n          return <div className={`dots ${column}`}></div>;\n        });\n      })}\n    </div>\n  );\n};\n\nexport default Field;\n","import React from \"react\";\nimport { GameStatus } from \"../constants\";\n\nconst Button = ({ status, onStart, onStop, onRestart }) => {\n  return (\n    <div className=\"button\">\n      {status === GameStatus.gameover && (\n        <button className=\"btn btn-gameover\" onClick={onRestart}>\n          gameover\n        </button>\n      )}\n      {status === GameStatus.init && (\n        <button className=\"btn btn-init\" onClick={onStart}>\n          start\n        </button>\n      )}\n      {status === GameStatus.suspended && (\n        <button className=\"btn btn-suspended\" onClick={onStart}>\n          start\n        </button>\n      )}\n      {status === GameStatus.playing && (\n        <button className=\"btn btn-playing\" onClick={onStop}>\n          stop\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft,faArrowUp,faArrowDown,faArrowRight} from \"@fortawesome/free-solid-svg-icons\"\nimport { Direction } from \"../constants\";\n\nconst ManipulationPanel = ({ onChange }) => {\n  const onUp = () => onChange(Direction.up);\n  const onRight = () => onChange(Direction.right);\n  const onLeft = () => onChange(Direction.left);\n  const onDown = () => onChange(Direction.down);\n\n  return (\n    <div className=\"manipulation-panel\">\n      <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n        <FontAwesomeIcon icon={faArrowLeft} />\n      </button>\n      <div>\n        <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n          <FontAwesomeIcon icon={faArrowUp} />\n        </button>\n        <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\n          <FontAwesomeIcon icon={faArrowDown} />\n        </button>\n      </div>\n      <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n        <FontAwesomeIcon icon={faArrowRight} />\n      </button>\n    </div>\n  );\n};\n\nexport default ManipulationPanel;\n","import { useCallback, useState, useEffect } from \"react\";\nimport {\n  defaultInterval,\n  defaultDifficulty,\n  initialPosition,\n  initialValues,\n  Delta,\n  Difficulty,\n  Direction,\n  DirectionKeyCodeMap,\n  GameStatus,\n  OppositeDirection,\n} from \"../constants\";\nimport {\n  initFields,\n  isCollision,\n  isEatingMyself,\n  getFoodPosition,\n} from \"../utils\";\n\nlet timer = null;\n\nconst unsubscribe = () => {\n  if (!timer) {\n    return;\n  }\n  clearInterval(timer);\n};\n\nconst useSnakeGame = () => {\n  const [fields, setFields] = useState(initialValues);\n  const [body, setBody] = useState([]);\n  const [status, setStatus] = useState(GameStatus.init);\n  const [direction, setDirection] = useState(Direction.up);\n  const [difficulty, setDifficulty] = useState(defaultDifficulty);\n  const [tick, setTick] = useState(0);\n\n  useEffect(() => {\n    setBody([initialPosition]);\n    //test用\n    // setBody(new Array(15).fill(\"\").map((_item,index)=>({x:17,y:17+index})),\n    // )\n\n    //gameの中の時間を管理する\n    const interval = Difficulty[difficulty - 1];\n    timer = setInterval(() => {\n      setTick((tick) => tick + 1);\n    }, interval);\n    return unsubscribe;\n  }, [difficulty]);\n\n  useEffect(() => {\n    if (body.length === 0 || status !== GameStatus.playing) {\n      return;\n    }\n    const canContinue = handleMoving();\n    if (!canContinue) {\n      setStatus(GameStatus.gameover);\n    }\n  }, [tick]);\n\n  const start = () => setStatus(GameStatus.playing);\n\n  const stop = () => setStatus(GameStatus.suspended);\n\n  const reload = () => {\n    timer = setInterval(() => {\n      setTick((tick) => tick + 1);\n    }, defaultInterval);\n    setStatus(GameStatus.init);\n    setBody([initialPosition]);\n    setDirection(Direction.up);\n    setFields(initFields(35, initialPosition));\n  };\n\n  const updateDirection = useCallback(\n    (newDirection) => {\n      if (status !== GameStatus.playing) {\n        return direction;\n      }\n      if (OppositeDirection[direction] === newDirection) {\n        return;\n      }\n      setDirection(newDirection);\n    },\n    [direction, status]\n  );\n\n  const updateDifficulty = useCallback(\n    (difficulty) => {\n      if (status !== GameStatus.init) {\n        return;\n      }\n      if (difficulty < 1 || difficulty > Difficulty.length) {\n        return;\n      }\n      setDifficulty(difficulty);\n    },\n    [status]\n  );\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode];\n      if (!newDirection) {\n        return;\n      }\n      updateDirection(newDirection);\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [updateDirection]);\n\n  const handleMoving = () => {\n    const { x, y } = body[0];\n    const delta = Delta[direction];\n    const newPosition = {\n      x: x + delta.x,\n      y: y + delta.y,\n    };\n\n    if (\n      isCollision(fields.length, newPosition) ||\n      isEatingMyself(fields, newPosition)\n    ) {\n      return false;\n    }\n    const newBody = [...body];\n    if (fields[newPosition.y][newPosition.x] !== \"food\") {\n      const removingTrack = newBody.pop();\n      fields[removingTrack.y][removingTrack.x] = \"\";\n    } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition]);\n      fields[food.y][food.x] = \"food\";\n    }\n    fields[newPosition.y][newPosition.x] = \"snake\";\n    newBody.unshift(newPosition);\n    setBody(newBody);\n    setFields(fields);\n    return true;\n  };\n  return{\n      body,\n      difficulty,\n      fields,\n      status,\n      start,\n      stop,\n      reload,\n      updateDirection,\n      updateDifficulty\n  }\n};\n\nexport default useSnakeGame","import React from \"react\";\nimport Navigation from \"./components/Navigation\";\nimport Field from \"./components/Field\";\nimport Button from \"./components/Button\";\nimport ManipulationPanel from \"./components/ManipulationPanal\";\nimport useSnakeGame from \"./hooks/useSnakeGame\";\nimport \"./App.css\";\n\n\n\nfunction App() {\n  const {\n    body,\n    difficulty,\n    fields,\n    start,\n    stop,\n    reload,\n    status,\n    updateDirection,\n    updateDifficulty,\n  } = useSnakeGame();\n\n  return (\n    <div className=\"App\">\n      {/* header */}\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Snake Geme</h1>\n        </div>\n        <Navigation\n          length={body.length}\n          difficulty={difficulty}\n          onChangeDifficulty={updateDifficulty}\n        />\n      </header>\n\n      {/* Main */}\n      <main className=\"footer\">\n        <Field fields={fields} />\n      </main>\n\n      {/* footer */}\n      <footer className=\"footer\">\n        <Button\n          status={status}\n          onStop={stop}\n          onStart={start}\n          onRestart={reload}\n        />\n        <ManipulationPanel onChange={updateDirection} />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}